---
kind: Service
apiVersion: v1
metadata:
  name: redis-push-service
  namespace: tethus
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: redis-push
  annotations:
    meta.helm.sh/release-name: redis-push
    meta.helm.sh/release-namespace: tethus
spec:
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: redis-push

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: redis-push
  namespace: tethus
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/name: redis-push
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: redis-push
  template:
    metadata:
      name: redis-push
      labels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/name: redis-push
    spec:
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: redis-push-configs
            items:
              - key: redis.conf
                path: redis.conf
      containers:
        - name: redis-push
          image: "redis:5"
          command: ["redis-server","/usr/local/etc/redis/redis.conf"]
          ports:
            - name: client
              containerPort: 6379
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: "/usr/local/etc/redis/redis.conf"
              subPath: redis.conf
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  serviceName: redis
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 5
